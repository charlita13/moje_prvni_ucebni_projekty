from tkinter import *
import psycopg2

root = Tk()
root.title("Skola a databaze")
root.geometry('300x280')
root.resizable(False, False)

# funkce
def insert_data(name, age, address):
    connection = psycopg2.connect(
        dbname='student',
        user='postgres',
        password='admin',
        host='localhost',
        port='5432'
    )

    cur = connection.cursor()
    query = '''INSERT INTO teacher(name, age, address)
                VALUES (%s, %s, %s)'''

    cur.execute(query, (name, age, address))
    connection.commit()
    connection.close()

    display_all()
    entry_address.delete(0, END)
    entry_age.delete(0, END)
    entry_name.delete(0, END)

def search(id):
    connection = psycopg2.connect(
        dbname='student',
        user='postgres',
        password='admin',
        host='localhost',
        port='5432'
    )

    cur = connection.cursor()
    query = '''SELECT * FROM teacher WHERE id = %s'''
    cur.execute(query, (id,))
    row = cur.fetchone()
    if row:
        display_sarch(row)
    else:
        display_sarch("id nenalezeno")        
    connection.commit()
    connection.close()

def display_all():
    connection = psycopg2.connect(
        dbname='student',
        user='postgres',
        password='admin',
        host='localhost',
        port='5432'
    )

    cur = connection.cursor()
    query = '''SELECT *FROM teacher'''
    cur.execute(query)
    all_data = cur.fetchall()
    listbox = Listbox(root, width=25, height=5)
    listbox.grid(row=7, column=1)
    for i in all_data:
        listbox.insert(0, i)
    
    posuvnik = Scrollbar(root)
    posuvnik.grid(row=7, column=2, sticky=N+S+W)
    listbox.config(yscrollcommand=posuvnik.set)
    posuvnik.config(command=listbox.yview)

def display_sarch(data):
    listbox = Listbox(root, width=25, height=1)
    listbox.grid(row=7, column=2)
    listbox.insert(0, data)

display_all()

# entries and labels
label_general = Label(root, text="Add data")
label_general.grid(row=0, column=1)

label_name = Label(root, text="Name")
label_name.grid(row=1, column=0)

# name
entry_name = Entry(root)
entry_name.grid(row=1, column=1)

label_age = Label(root, text="Age")
label_age.grid(row=2, column=0)

#age
entry_age = Entry(root)
entry_age.grid(row=2, column=1)

label_address = Label(root, text="Address")
label_address.grid(row=3, column=0)

# address
entry_address = Entry(root)
entry_address.grid(row=3, column=1)

# send button
button = Button(root, text="Add", command=lambda:insert_data(entry_name.get(), entry_age.get(), entry_address.get()))
button.grid(row=4, column=1)

# SEARCH section
label_search = Label(root, text="Search data")
label_search.grid(row=5, column=1)

label_id = Label(root, text="Search by ID")
label_id.grid(row=6, column=0)

entry_id = Entry(root)
entry_id.grid(row=6, column=1)

button_search = Button(text="Search", command=lambda:search(entry_id.get()) if entry_id.get() else None)
button_search.grid(row=6, column=2)

root.mainloop()
